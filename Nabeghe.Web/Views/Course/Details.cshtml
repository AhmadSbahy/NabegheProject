@using Nabeghe.Application.Statics
@using Nabeghe.Application.Extensions
@using Nabeghe.Domain.Models.Course
@using Nabeghe.Application.Convertor
@using Nabeghe.Application.Services.Interfaces
@using Nabeghe.Domain.ViewModels.Order
@model Nabeghe.Domain.ViewModels.Course.CourseDetailViewModel
@inject ICourseService CourseService
@inject IUserService UserService
@{
	ViewData["slug"] = Model.Slug;
	if (await UserService.IsUserInCourse(User.GetUserId(), Model.Id) || Model.CoursePrice == 0)
	{
		ViewData["UserHasAccess"] = "true";	
	}
	
}
<div class="max-w-7xl space-y-14 px-4 mx-auto">
	<div class="flex md:flex-nowrap flex-wrap items-start gap-5">
		<div class="md:w-8/12 w-full">
			<div class="relative">
				<div class="relative z-10">
					@if (ViewData["episodeFileName"] != null)
					{
						<div class="relative max-w-full rounded-3xl overflow-hidden z-10">
							<div class="plyr plyr--full-ui plyr--video plyr--html5 plyr--fullscreen-enabled plyr--pip-supported plyr__poster-enabled plyr--paused">
								<div class="plyr__video-wrapper">
									<video class="js-player" playsinline="" data-poster="@PathTools.CourseImagePath@Model.ImageName">
										<source src="@PathTools.CourseFilePath@ViewData["episodeFileName"].ToString()" type="video/mp4">
									</video>
									<div class="plyr__captions" dir="auto"></div>
									<button type="button" class="plyr__control plyr__control--overlaid" data-plyr="play" aria-pressed="false" aria-label="Play">
										<svg aria-hidden="true" focusable="false"><use xlink:href="#plyr-play"></use></svg>
										<span class="plyr__sr-only">Play</span>
									</button>
								</div>
							</div>
						</div>
					}
					else
					{
						<div>
							<img style="width:1000px;height:530px" src="@PathTools.CourseImagePath@Model.ImageName" class="max-w-full rounded-3xl" alt="...">
						</div>
					}
				</div>

				<div class="-mt-12 pt-12">
					<div class="bg-gradient-to-b from-background to-secondary rounded-b-3xl space-y-2 p-5 mx-5">
						<div class="flex items-center gap-2">
							<span class="block w-1 h-1 bg-success rounded-full"></span>
							<span class="font-bold text-xs text-success">@Model.CourseStatus?.StatusTitle</span>
						</div>

						<h1 class="font-bold text-xl text-foreground">@Model.CourseTitle</h1>

						<p class="text-sm text-muted">
							@Model.CourseSubTitle
						</p>
					</div>
					<div class="space-y-10 py-5">
						<div class="grid lg:grid-cols-4 grid-cols-2 gap-5">
							<div class="flex flex-col items-center justify-center gap-3 bg-secondary border border-border rounded-2xl cursor-default p-3">
								<span class="flex items-center justify-center w-12 h-12 bg-background rounded-full text-primary">
									<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
										<path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm.75-13a.75.75 0 0 0-1.5 0v5c0 .414.336.75.75.75h4a.75.75 0 0 0 0-1.5h-3.25V5Z" clip-rule="evenodd"></path>
									</svg>
								</span>
								<div class="flex flex-col items-center justify-center text-center space-y-1">
									<span class="font-bold text-xs text-muted line-clamp-1">مدت دوره</span>
									<span class="font-bold text-sm text-foreground line-clamp-1">@Model.totalCourseTime</span>
								</div>
							</div>
							<div class="flex flex-col items-center justify-center gap-3 bg-secondary border border-border rounded-2xl cursor-default p-3">
								<span class="flex items-center justify-center w-12 h-12 bg-background rounded-full text-primary">
									<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
										<path fill-rule="evenodd" d="M4.25 2A2.25 2.25 0 0 0 2 4.25v2.5A2.25 2.25 0 0 0 4.25 9h2.5A2.25 2.25 0 0 0 9 6.75v-2.5A2.25 2.25 0 0 0 6.75 2h-2.5Zm0 9A2.25 2.25 0 0 0 2 13.25v2.5A2.25 2.25 0 0 0 4.25 18h2.5A2.25 2.25 0 0 0 9 15.75v-2.5A2.25 2.25 0 0 0 6.75 11h-2.5Zm9-9A2.25 2.25 0 0 0 11 4.25v2.5A2.25 2.25 0 0 0 13.25 9h2.5A2.25 2.25 0 0 0 18 6.75v-2.5A2.25 2.25 0 0 0 15.75 2h-2.5Zm0 9A2.25 2.25 0 0 0 11 13.25v2.5A2.25 2.25 0 0 0 13.25 18h2.5A2.25 2.25 0 0 0 18 15.75v-2.5A2.25 2.25 0 0 0 15.75 11h-2.5Z" clip-rule="evenodd"></path>
									</svg>
								</span>
								<div class="flex flex-col items-center justify-center text-center space-y-1">
									<span class="font-bold text-xs text-muted line-clamp-1">
										تعداد
										جلسات
									</span>
									<span class="font-bold text-sm text-foreground line-clamp-1">@Model.CourseEpisodes?.Count()</span>
								</div>
							</div>
							<div class="flex flex-col items-center justify-center gap-3 bg-secondary border border-border rounded-2xl cursor-default p-3">
								<span class="flex items-center justify-center w-12 h-12 bg-background rounded-full text-primary">
									<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
										<path fill-rule="evenodd" d="M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-7-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9 9a.75.75 0 0 0 0 1.5h.253a.25.25 0 0 1 .244.304l-.459 2.066A1.75 1.75 0 0 0 10.747 15H11a.75.75 0 0 0 0-1.5h-.253a.25.25 0 0 1-.244-.304l.459-2.066A1.75 1.75 0 0 0 9.253 9H9Z" clip-rule="evenodd"></path>
									</svg>
								</span>
								<div class="flex flex-col items-center justify-center text-center space-y-1">
									<span class="font-bold text-xs text-muted line-clamp-1">نوع دوره</span>

									@if (Model.CoursePrice > 0)
									{
										<span class="font-bold text-sm text-foreground line-clamp-1">
											نقدی
										</span>
									}
									else
									{
										<span class="font-bold text-sm text-foreground line-clamp-1">
											رایگان
										</span>
									}

								</div>
							</div>
							<div class="flex flex-col items-center justify-center gap-3 bg-secondary border border-border rounded-2xl cursor-default p-3">
								<span class="flex items-center justify-center w-12 h-12 bg-background rounded-full text-primary">
									<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
										<path d="M10 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6ZM6 8a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM1.49 15.326a.78.78 0 0 1-.358-.442 3 3 0 0 1 4.308-3.516 6.484 6.484 0 0 0-1.905 3.959c-.023.222-.014.442.025.654a4.97 4.97 0 0 1-2.07-.655ZM16.44 15.98a4.97 4.97 0 0 0 2.07-.654.78.78 0 0 0 .357-.442 3 3 0 0 0-4.308-3.517 6.484 6.484 0 0 1 1.907 3.96 2.32 2.32 0 0 1-.026.654ZM18 8a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM5.304 16.19a.844.844 0 0 1-.277-.71 5 5 0 0 1 9.947 0 .843.843 0 0 1-.277.71A6.975 6.975 0 0 1 10 18a6.974 6.974 0 0 1-4.696-1.81Z">
										</path>
									</svg>
								</span>
								<div class="flex flex-col items-center justify-center text-center space-y-1">
									<span class="font-bold text-xs text-muted line-clamp-1">شرکت‌کنندگان</span>
									<span class="font-bold text-sm text-foreground line-clamp-1">
										@Model.Participants
										دانشجو
									</span>
								</div>
							</div>
						</div>
						<div class="space-y-5" x-data="{ activeTab: 'tabOne', scroll: function() { document.getElementById(this.activeTab).scrollIntoView({ behavior: 'smooth' }) } }">
							<div class="sticky top-24 z-10">
								<div class="relative overflow-x-auto">
									<ul class="inline-flex gap-2 bg-secondary border border-border rounded-full p-1">
										<li>
											<button type="button" class="flex items-center gap-x-2 relative rounded-full py-2 px-4 text-foreground bg-background" x-bind:class="activeTab === 'tabOne' ? 'text-foreground bg-background' : 'text-muted'" x-on:click="activeTab = 'tabOne'; scroll();">
												<span x-show="activeTab === 'tabOne'">
													<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
														<path d="M2.695 14.763l-1.262 3.154a.5.5 0 00.65.65l3.155-1.262a4 4 0 001.343-.885L17.5 5.5a2.121 2.121 0 00-3-3L3.58 13.42a4 4 0 00-.885 1.343z">
														</path>
													</svg>
												</span>
												<span x-show="activeTab !== 'tabOne'" style="display: none;">
													<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
														<path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125">
														</path>
													</svg>
												</span>
												<span class="font-semibold text-sm whitespace-nowrap">معرفی</span>
											</button>
										</li>
										<li>
											<button type="button" class="flex items-center gap-x-2 relative rounded-full py-2 px-4 text-muted" x-bind:class="activeTab === 'tabTwo' ? 'text-foreground bg-background' : 'text-muted'" x-on:click="activeTab = 'tabTwo'; scroll();">
												<span x-show="activeTab === 'tabTwo'" style="display: none;">
													<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
														<path fill-rule="evenodd" d="M6 4.75A.75.75 0 016.75 4h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 4.75zM6 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 10zm0 5.25a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75a.75.75 0 01-.75-.75zM1.99 4.75a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 15.25a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 10a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V10z" clip-rule="evenodd"></path>
													</svg>
												</span>
												<span x-show="activeTab !== 'tabTwo'">
													<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
														<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zM3.75 12h.007v.008H3.75V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm-.375 5.25h.007v.008H3.75v-.008zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z">
														</path>
													</svg>
												</span>
												<span class="font-semibold text-sm whitespace-nowrap">سرفصلها</span>
											</button>
										</li>
										<li>
											<button type="button" class="flex items-center gap-x-2 relative rounded-full py-2 px-4 text-muted" x-bind:class="activeTab === 'tabThree' ? 'text-foreground bg-background' : 'text-muted'" x-on:click="activeTab = 'tabThree'; scroll();">
												<span x-show="activeTab === 'tabThree'" style="display: none;">
													<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
														<path d="M3.505 2.365A41.369 41.369 0 0 1 9 2c1.863 0 3.697.124 5.495.365 1.247.167 2.18 1.108 2.435 2.268a4.45 4.45 0 0 0-.577-.069 43.141 43.141 0 0 0-4.706 0C9.229 4.696 7.5 6.727 7.5 8.998v2.24c0 1.413.67 2.735 1.76 3.562l-2.98 2.98A.75.75 0 0 1 5 17.25v-3.443c-.501-.048-1-.106-1.495-.172C2.033 13.438 1 12.162 1 10.72V5.28c0-1.441 1.033-2.717 2.505-2.914Z">
														</path>
														<path d="M14 6c-.762 0-1.52.02-2.271.062C10.157 6.148 9 7.472 9 8.998v2.24c0 1.519 1.147 2.839 2.71 2.935.214.013.428.024.642.034.2.009.385.09.518.224l2.35 2.35a.75.75 0 0 0 1.28-.531v-2.07c1.453-.195 2.5-1.463 2.5-2.915V8.998c0-1.526-1.157-2.85-2.729-2.936A41.645 41.645 0 0 0 14 6Z">
														</path>
													</svg>
												</span>
												<span x-show="activeTab !== 'tabThree'">
													<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
														<path stroke-linecap="round" stroke-linejoin="round" d="M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 0 1-.825-.242m9.345-8.334a2.126 2.126 0 0 0-.476-.095 48.64 48.64 0 0 0-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0 0 11.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155">
														</path>
													</svg>
												</span>
												<span class="font-semibold text-sm whitespace-nowrap">
													دیدگاه
													و پرسش
												</span>
											</button>
										</li>
									</ul>
								</div>
							</div>
							<div class="space-y-8">
								<div class="bg-background rounded-3xl p-5" id="tabOne">
									<div class="flex items-center gap-3 mb-5">
										<div class="flex items-center gap-1">
											<div class="w-1 h-1 bg-foreground rounded-full"></div>
											<div class="w-2 h-2 bg-foreground rounded-full"></div>
										</div>
										<div class="font-black text-foreground">معرفی دوره</div>
									</div>
									<div class="description">
										@Html.Raw(Model.CourseDescription)
									</div>
								</div>
								<div class="bg-background rounded-3xl p-5" id="tabTwo">
									<div class="flex items-center gap-3 mb-5">
										<div class="flex items-center gap-1">
											<div class="w-1 h-1 bg-foreground rounded-full"></div>
											<div class="w-2 h-2 bg-foreground rounded-full"></div>
										</div>
										<div class="font-black text-foreground">قسمت ها</div>
									</div>
									<partial name="_Episodes" model="Model.CourseEpisodes"/>
								</div>
								<div class="bg-background rounded-3xl p-5" id="tabThree">
									<div class="flex items-center gap-3 mb-5">
										<div class="flex items-center gap-1">
											<div class="w-1 h-1 bg-foreground rounded-full"></div>
											<div class="w-2 h-2 bg-foreground rounded-full"></div>
										</div>
										<div class="font-black text-foreground">دیدگاه و پرسش</div>
									</div>
									@if (User.Identity.IsAuthenticated)
									{
										<partial name="_CourseComment" model="Model"/>
									}
									else
									{
											<div class="alert alert-primary">برای ایجاد نظر باید وارد سایت شوید</div>
									}
									<div class="space-y-3">
										@await Component.InvokeAsync("CourseComment", new { courseId = Model.Id })
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="md:w-4/12 w-full md:sticky md:top-24 space-y-8">
			<div class="bg-gradient-to-b from-secondary to-background rounded-2xl px-5 pb-5">
				<div class="bg-background rounded-b-3xl space-y-2 p-5 mb-5">
					<div class="flex items-center gap-3">
						<div class="flex items-center gap-1">
							<div class="w-1 h-1 bg-foreground rounded-full"></div>
							<div class="w-2 h-2 bg-foreground rounded-full"></div>
						</div>
						<div class="font-black text-foreground">@Model.CourseTitle</div>
					</div>
				</div>
				<div class="flex items-center justify-between gap-5">
					<span class="font-bold text-base text-muted">هزینه ثبت نام:</span>
					@if (Model.CoursePrice > 0)
					{
						<div class="flex flex-col items-end justify-center h-14">
							@if (CourseService.IsCourseHasDiscount(Model.CourseDiscount))
							{
								<span class="line-through text-muted">@Model.CoursePrice.ToMoney()</span>
								<div class="flex items-center gap-1">
									<span class="font-black text-xl text-foreground">@Model.CoursePrice.GetPriceAfterDiscount(Model.CourseDiscount.DiscountPercent)</span>
									<span class="text-xs text-muted">تومان</span>
								</div>
							}
							else
							{
								<div class="flex items-center gap-1">
									<span class="font-black text-xl text-foreground">@Model.CoursePrice.ToMoney()</span>
									<span class="text-xs text-muted">تومان</span>
								</div>
							}
						</div>
					}
					else
					{
						<div class="flex flex-col items-end justify-center h-14">
							<div class="flex items-center gap-1">
								<span class="font-black text-xl text-success">رایگان!</span>
							</div>
						</div>
					}
				</div>
				<div class="flex gap-3 mt-3">
					@if (await UserService.IsUserInCourse(User.GetUserId(), Model.Id))
					{
						<div class="flex flex-col items-end justify-center h-14">
							<div class="flex items-center gap-1">
								<span class="font-black text-md-center text-success">شما این دوره را قبلا خریداری کردید.</span>
							</div>
						</div>	
					}
					else if (!await UserService.IsUserInCourse(User.GetUserId(), Model.Id) && Model.CoursePrice > 0)
					{
						<partial name="_AddCourseToOrder" model="@(new AddToOrderViewModel { CourseId = Model.Id })" />
					}
					<button onclick="AddCourseLike()" type="button" class="flex-shrink-0 w-11 h-11 inline-flex items-center justify-center bg-secondary rounded-full text-muted transition-colors @(Model.CourseLikes.Any(c=>User.Identity.IsAuthenticated && c.UserId==User.GetUserId() && c.CourseId == Model.Id )?"text-red-500":"")">
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
							<path d="m9.653 16.915-.005-.003-.019-.01a20.759 20.759 0 0 1-1.162-.682 22.045 22.045 0 0 1-2.582-1.9C4.045 12.733 2 10.352 2 7.5a4.5 4.5 0 0 1 8-2.828A4.5 4.5 0 0 1 18 7.5c0 2.852-2.044 5.233-3.885 6.82a22.049 22.049 0 0 1-3.744 2.582l-.019.01-.005.003h-.002a.739.739 0 0 1-.69.001l-.002-.001Z">
							</path>
						</svg>
					</button>
				</div>
			</div>
			<div class="space-y-5">
				<div class="flex items-center gap-3">
					<div class="flex items-center gap-1">
						<div class="w-1 h-1 bg-foreground rounded-full"></div>
						<div class="w-2 h-2 bg-foreground rounded-full"></div>
					</div>
					<div class="font-black text-sm text-foreground">مدرس دوره</div>
				</div>
				<div class="space-y-3">
					<div class="flex items-center gap-3">
						<div class="flex-shrink-0 w-10 h-10 rounded-full overflow-hidden">
							<img src="@PathTools.GetAvatarPath@Model.User.Avatar" class="w-full h-full object-cover" alt="...">
						</div>
						<div class="flex flex-col items-start space-y-1">
							<a href="javascript:void(0)" class="line-clamp-1 font-bold text-sm text-foreground hover:text-primary">
								@Model.User.FirstName @Model.User.LastName
							</a>
						</div>
					</div>
				</div>
			</div>
			<!-- end course:lecturer -->
		</div>
	</div>
</div>
@section Scripts
{

	<script>

			function showAccessWarning() {
				Swal.fire({
					position: 'top-start',
					icon: 'warning',
					title: 'شما به این دوره دسترسی ندارید.',
					showConfirmButton: false,
					timer: 1500
				});
				}

		async function AddCourseLike() {
			await fetch('/Course/AddCourseLike', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({ UserId:@User.GetUserId() , CourseId: @Model.Id })
			})
				.then(response => response.json())
				.then(data => {
					if (data.success) {
						window.location.reload();
					} else if (data.status == 400){
						Swal.fire({
						position: 'top-start',
						icon: 'error',
						title: 'برای افزودن دوره به علاقه مندی باید وارد سایت شوید',
						showConfirmButton: false,
						timer: 2300
					});
					} else {
						console.error("Failed to add like.");
					}
				})
				.catch(error => console.error('Error:', error));
		}

		async function AddLike(id) {
			await fetch('/Course/AddLike', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({ commentId: id, courseId: @Model.Id })
			})
				.then(response => response.json())
				.then(data => {
					if (data.success) {
						window.location.reload();
					} else if (data.status == 400){
						Swal.fire({
						position: 'top-start',
						icon: 'error',
						title: 'برای پسندیدن نظر باید وارد سایت شوید',
						showConfirmButton: false,
						timer: 2000
					});
					} else {
						console.error("Failed to add like.");
					}
				})
				.catch(error => console.error('Error:', error));
		}



		function replyToComment(commentId) {
			document.getElementById('commentId').value = commentId; // تنظیم commentId
			document.getElementById('commentForm').classList.add('reply-mode');
			document.getElementById('commentText').style.backgroundColor = "#ffaf24";
			setTimeout(() => {
				document.getElementById('commentForm').classList.remove('reply-mode');
				document.getElementById('commentText').style.backgroundColor = '';
			}, 1000);// تغییر رنگ فرم برای حالت پاسخ
			document.getElementById('commentText').placeholder = 'پاسخ خود را وارد کنید ...';
		}


		document.getElementById('commentForm').addEventListener('submit', async function (e) {
			e.preventDefault();

			const courseId = document.getElementById('courseId').value;
			const commentId = document.getElementById('commentId').value;
			const commentText = document.getElementById('commentText').value.trim();

			if (!commentText) {
				Swal.fire({
					position: 'top-start',
					icon: 'warning',
					title: 'لطفاً یک متن وارد کنید.',
					showConfirmButton: false,
					timer: 1500
				});
				return;
			}

			try {
				const url = commentId ? '/Course/AddReply' : '/Course/AddComment'; // تعیین URL براساس حالت
				const data = commentId ? { commentId: parseInt(commentId), replyText: commentText } : { courseId: parseInt(courseId), commentText: commentText };

				const response = await fetch(url, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
						'RequestVerificationToken': '@Html.AntiForgeryToken()'
					},
					body: JSON.stringify(data)
				});

				if (!response.ok) throw new Error('Server error');

				const result = await response.json();

				if (result.success) {
					Swal.fire({
						position: 'top-start',
						icon: 'success',
						title: 'نظر با موفقیت ثبت شد,منتظر تاییدآن توسط مدیران سایت باشید.',
						showConfirmButton: false,
						timer: 1500
					}).then(() => {
						window.location.reload();
					});
					document.getElementById('commentText').value = '';
					document.getElementById('commentId').value = '';
					document.getElementById('commentForm').classList.remove('reply-mode');
					document.getElementById('commentText').placeholder = 'متن مورد نظر خود را وارد کنید ...';
				} else if (result.status == 400){
						Swal.fire({
						position: 'top-start',
						icon: 'error',
						title: 'برای ثبت نظر باید وارد سایت شوید',
						showConfirmButton: false,
						timer: 2000
					});
				}
				else {
					Swal.fire({
						position: 'top-start',
						icon: 'error',
						title: 'خطا در ثبت نظر',
						showConfirmButton: false,
						timer: 1500
					});
				}
			} catch (error) {
				console.error('Error:', error);
				Swal.fire({
					position: 'top-start',
					icon: 'error',
					title: 'خطا در ارتباط با سرور',
					showConfirmButton: false,
					timer: 1500
				});
			}
		});

	</script>
}
